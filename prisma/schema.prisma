// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




/////////////////////////
/////////////////////  /////////////////////////////


model User {
  id    Int       @id @default(autoincrement())
  name  String    @unique @db.VarChar(50)
  dni  String    @unique @db.VarChar(50)
  email     String    @unique @db.VarChar(100)
  maxHours    Int       
  creationDate DateTime  @default(now())
  projects  Project[]
}

model Project {
  id    Int           @id @default(autoincrement())
  projectName  String        @db.VarChar(100)
  description  String?
  creationDate    DateTime      @default(now())
  dateStart DateTime    
  dateEnd DateTime     
  dateFinished DateTime    

  userId       Int
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  rateId       Int
  rate         Rate          @relation(fields: [rateId], references: [id], onDelete: Cascade)

  tasks            Task[]  

}


model Rate {
    id  Int       @id @default(autoincrement()) @map("id")
    name String    @db.VarChar(50) @map("name")
    price Decimal   @db.Decimal(10, 2)
    currency String    @default("USD") @db.VarChar(6)     
    projects  Project[]

}




model Task {
   
   id        Int       @id @default(autoincrement()) @map("id")
   
   name     String    @db.VarChar(200) @map("name")
   overview     String?   @db.Text
   status       StatusActivity    @default(IDLE)
  position Int? @default(0)
  //1:N 
  ProjectId      Int       @map("project_id")
  project        Project  @relation(fields: [ProjectId], references: [id])

}

enum StatusActivity {
  IDLE
  PENDING
  INPROGRESS
  DONE
  CANCELED
}